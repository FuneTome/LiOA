#include <iostream>
using namespace std;

struct node {
	int n;
	node* next;
	node(int _n) : n(_n), next(nullptr){}
};

struct list{
	node* first;
	node* last;
	list() : first(nullptr), last(nullptr){}

	bool is_empty() { return first == nullptr; }
	void add_back(int _n) {
		node* p = new node(_n);
		if (is_empty()) {
			first = p;
			last = p;
			return;
		}
		last->next = p;
		last = p;
	}
	void dlt_last() {
		if (is_empty()) return;
		node* p = first;
		while (p->next != last) p = p->next;
		p->next = nullptr;
		delete last;
		last = p;
	}
	void print() {
		if (is_empty()) return;
		node* p = first;
		while (p) {
			cout << p->n << " ";
			p = p->next;
		}
		cout << "\n";
	}
	void dlt(){
		if (is_empty()) return;
		
	}
};



int main() {
	setlocale(LC_ALL, "");
	list l;
	int r;
	cout << "1. Добавить элемент \n2. Вывести список \n3. Удалить элемент \n4. Выход\n";
	while (1) {
		cout << "Выберите пункт : ";
		cin >> r;
		switch(r){
		case 1: {
			int n;
			cout << "Введите значение: ";
			cin >> n;
			l.add_back(n);
		}continue;
		case 2: {
			l.print();
		}continue;
		case 3: {
			l.dlt_last();
		}continue;
		case 4: { exit(0); };
		}
	}
	return 0;
}